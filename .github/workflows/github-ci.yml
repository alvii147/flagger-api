name: GitHub CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  static:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Run Go vet
      run: |
        go vet ./...

    - name: Run Go fmt
      run: |
        (gofmt -l . | grep -v vendor/ && exit 1 || exit 0)

  tests:
    env:
      FLAGGERAPI_HOSTNAME: 0.0.0.0
      FLAGGERAPI_PORT: 8080
      FLAGGERAPI_SECRET_KEY: DEADBEEF
      FLAGGERAPI_HASHING_COST: 14
      FLAGGERAPI_FRONTEND_BASE_URL: http://localhost:3000
      FLAGGERAPI_FRONTEND_ACTIVATION_ROUTE: /signup/activate/%s
      FLAGGERAPI_AUTH_ACCESS_LIFETIME: 30
      FLAGGERAPI_AUTH_REFRESH_LIFETIME: 43800
      FLAGGERAPI_ACTIVATION_LIFETIME: 43800
      FLAGGERAPI_POSTGRES_HOSTNAME: localhost
      FLAGGERAPI_POSTGRES_PORT: 5432
      FLAGGERAPI_POSTGRES_USERNAME: postgres
      FLAGGERAPI_POSTGRES_PASSWORD: postgres
      FLAGGERAPI_POSTGRES_DATABASE_NAME: flaggerdb
      FLAGGERAPI_SMTP_HOSTNAME: smtp.gmail.com
      FLAGGERAPI_SMTP_PORT: 587
      FLAGGERAPI_SMTP_USERNAME: ""
      FLAGGERAPI_SMTP_PASSWORD: ""
      FLAGGERAPI_MAIL_CLIENT_TYPE: console

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "postgres"
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Create database
      run: |
        PGPASSWORD=${{env.FLAGGERAPI_POSTGRES_PASSWORD}} psql \
          --username=${{env.FLAGGERAPI_POSTGRES_USERNAME}} \
          --host=${{env.FLAGGERAPI_POSTGRES_HOSTNAME}} \
          --port=${{env.FLAGGERAPI_POSTGRES_PORT}} \
          --command="CREATE DATABASE ${{env.FLAGGERAPI_POSTGRES_DATABASE_NAME}};"
        PGPASSWORD=${{env.FLAGGERAPI_POSTGRES_PASSWORD}} psql \
          --username=${{env.FLAGGERAPI_POSTGRES_USERNAME}} \
          --host=${{env.FLAGGERAPI_POSTGRES_HOSTNAME}} \
          --port=${{env.FLAGGERAPI_POSTGRES_PORT}} \
          --dbname=${{env.FLAGGERAPI_POSTGRES_DATABASE_NAME}} \
          --file=db/create_tables.sql

    - name: Run unit tests
      run: |
        FLAGGERAPI_MAIL_CLIENT_TYPE=inmem go test -v -coverprofile coverage.out ./...

    - name: Show coverage report
      run: |
        go tool cover -func coverage.out
